{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { useEffect, RefObject } from \"react\";\n\n/**\n * Options for the hook.\n */\ninterface HookOptions {\n\t/**\n\t * If `true`, each event is applied to a single corresponding element (one-to-one mapping).\n\t * If `false` (default), all events are applied to all referenced elements.\n\t*/\n\toneToOne?: boolean;\n\t/** Whether the event handler should be called once immediately after setup (default: false). */\n\tcallHandlerOnce?: boolean;\n\t/** Whether the handler should be called on each event binding (default: false). */\n\tcallHandlerOnEach?: boolean;\n\t/** Additional options to pass to the event listener (default: {}). */\n\tlistenerOptions?: AddEventListenerOptions;\n}\n\ntype EventListenerCallback = (event?: Event) => void;\n\n/**\n * A custom React hook to add event listeners to one or multiple elements.\n *\n * @param {RefObject<T> | RefObject<T>[]} ref\n * A single or array of refs pointing to elements.\n * @param {string | string[]} event\n * The event type(s) to listen for.\n * @param {() => EventListenerCallback} callback\n * A function returning the event handler.\n * @param {any[]} [dependencies=[]]\n * Dependencies for the `useEffect` hook.\n * @param {HookOptions} [options={}]\n * Additional configuration options.\n *\n * @example\n * ```jsx\n * const buttonRef = useRef(null);\n * useListener(buttonRef, \"click\", () => () => {\n * \t\tconsole.log(\"Button clicked!\")\n * });\n * ```\n */\nexport default function useListener<T extends HTMLElement>(\n\tref: RefObject<T> | RefObject<T>[],\n\tevent: string | string[],\n\tcallback: () => EventListenerCallback,\n\tdependencies: any[] = [],\n\toptions: HookOptions = {}\n) {\n\tconst {\n\t\toneToOne = false,\n\t\tcallHandlerOnce = false,\n\t\tcallHandlerOnEach = false,\n\t\tlistenerOptions = {}\n\t} = options;\n\n\tconst events = Array.isArray(event) ? event : [event];\n\tconst refs = Array.isArray(ref) ? ref : [ref];\n\n\tif (oneToOne && refs.length !== events.length) {\n\t\tthrow new Error(\n\t\t\t\"When oneToOne is set to false, the number of refs and events must be equal.\"\n\t\t);\n\t}\n\n\tuseEffect(() => {\n\t\tconst handler = callback();\n\t\tif (callHandlerOnce) handler();\n\n\t\tconst controller = new AbortController();\n\n\t\tif (oneToOne) {\n\t\t\tfor (let i = 0; i < refs.length; i++) {\n\t\t\t\tif (callHandlerOnEach) handler();\n\t\t\t\trefs[i]?.current?.addEventListener(events[i], handler, {\n\t\t\t\t\tsignal: controller.signal,\n\t\t\t\t\t...listenerOptions,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn () => controller.abort();\n\t\t}\n\n\t\tfor (let rf of refs) {\n\t\t\tfor (let evt of events) {\n\t\t\t\tif (callHandlerOnEach) handler();\n\t\t\t\trf?.current?.addEventListener(evt, handler, {\n\t\t\t\t\tsignal: controller.signal,\n\t\t\t\t\t...listenerOptions,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn () => {\n\t\t\tif (listenerOptions.signal) {\n\t\t\t\tif (oneToOne) {\n\t\t\t\t\tfor (let i = 0; i < refs.length; i++) {\n\t\t\t\t\t\trefs[i]?.current?.removeEventListener(events[i], handler);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telse for (let rf of refs) {\n\t\t\t\t\tfor (let evt of events) {\n\t\t\t\t\t\trf?.current?.removeEventListener(evt, handler);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcontroller.abort();\n\t\t\t}\n\t\t};\n\t\t\n\t}, dependencies);\n}"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAAS,iBAA4B;AA2CtB,SAAR,YACN,KACA,OACA,UACA,eAAsB,CAAC,GACvB,UAAuB,CAAC,GACvB;AACD,QAAM;AAAA,IACL,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,oBAAoB;AAAA,IACpB,kBAAkB,CAAC;AAAA,EACpB,IAAI;AAEJ,QAAM,SAAS,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AACpD,QAAM,OAAO,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,GAAG;AAE5C,MAAI,YAAY,KAAK,WAAW,OAAO,QAAQ;AAC9C,UAAM,IAAI;AAAA,MACT;AAAA,IACD;AAAA,EACD;AAEA,YAAU,MAAM;AAlEjB;AAmEE,UAAM,UAAU,SAAS;AACzB,QAAI,gBAAiB,SAAQ;AAE7B,UAAM,aAAa,IAAI,gBAAgB;AAEvC,QAAI,UAAU;AACb,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACrC,YAAI,kBAAmB,SAAQ;AAC/B,yBAAK,CAAC,MAAN,mBAAS,YAAT,mBAAkB,iBAAiB,OAAO,CAAC,GAAG,SAAS;AAAA,UACtD,QAAQ,WAAW;AAAA,WAChB;AAAA,MAEL;AACA,aAAO,MAAM,WAAW,MAAM;AAAA,IAC/B;AAEA,aAAS,MAAM,MAAM;AACpB,eAAS,OAAO,QAAQ;AACvB,YAAI,kBAAmB,SAAQ;AAC/B,uCAAI,YAAJ,mBAAa,iBAAiB,KAAK,SAAS;AAAA,UAC3C,QAAQ,WAAW;AAAA,WAChB;AAAA,MAEL;AAAA,IACD;AAEA,WAAO,MAAM;AA7Ff,UAAAA,KAAAC,KAAAC;AA8FG,UAAI,gBAAgB,QAAQ;AAC3B,YAAI,UAAU;AACb,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACrC,aAAAD,OAAAD,MAAA,KAAK,CAAC,MAAN,gBAAAA,IAAS,YAAT,gBAAAC,IAAkB,oBAAoB,OAAO,CAAC,GAAG;AAAA,UAClD;AAAA,QACD,MAEK,UAAS,MAAM,MAAM;AACzB,mBAAS,OAAO,QAAQ;AACvB,aAAAC,MAAA,yBAAI,YAAJ,gBAAAA,IAAa,oBAAoB,KAAK;AAAA,UACvC;AAAA,QACD;AAAA,MACD,OAAO;AACN,mBAAW,MAAM;AAAA,MAClB;AAAA,IACD;AAAA,EAED,GAAG,YAAY;AAChB;","names":["_a","_b","_c"]}